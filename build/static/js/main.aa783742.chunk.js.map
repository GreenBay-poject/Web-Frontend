{"version":3,"sources":["store/actions/auth.js","shared/validate.js","shared/utility.js","components/UI/FHtexthelp.js","helpers/uiHelpers.js","shared/consts.js","axios-SE.js","store/actions/actionTypes.js","api/utils.js","api/auth.js","store/actions/alert.js","shared/routes.js","containers/Auth/SignIn.js","shared/images/signuppage.jpg","containers/Auth/SignUp.js","containers/UserProfile/UserDetails.js","containers/UserProfile/UserProfile.js","components/UI/PostCard.js","containers/Feed/PostCard.js","App.js","serviceWorker.js","store/reducers/auth.js","store/reducers/alert.js","index.js"],"names":["authRequestInterceptor","checkValidity","rules","value","isValid","required","trim","minLength","length","maxLength","isEmail","test","INDEX","updateObject","object","updates","addItemToArray","array","item","newArray","push","FHTextField","props","TextField","fullWidth","onChange","inputChangeHandler","error","hasErr","className","componentClass","helperText","errStr","label","type","variant","autoComplete","buildTextFields","inputDefinitions","inputProperties","inputIsValid","Fragment","Object","keys","map","key","def","event","styleClass","validations","validationErrStr","authRequestTimeoutSec","instance","axios","create","baseURL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","ADD_ALERT","REMOVE_ALERT","postRequest","uri","data","a","post","response","BASE_URL","authStart","actionTypes","authSuccess","token","email","interceptors","request","use","headers","Authorization","idToken","authFail","authLogout","localStorage","removeItem","eject","checkAuthTimeout","expirationTime","dispatch","setTimeout","authReg","gmail","name","gender","age","postalcode","address","authData","console","log","then","expirationDate","Date","getTime","setItem","UserEmail","Token","auth","password","addAlert","alert","SIGNIN","USER_PROFILE","useStyles","makeStyles","theme","root","height","display","flexDirection","alignItems","avatar","margin","spacing","backgroundColor","palette","secondary","main","justifyContent","marginLeft","form","width","marginTop","submit","loginInput","color","connect","state","isAuthenticated","onAuth","classes","history","useHistory","useState","setInputIsValid","authObj","setAuthObj","checkInputValidity","useCallback","inputId","newValue","validationConst","target","inputFields","onSubmitHandler","preventDefault","localInputIsValid","formErrorLabel","FormLabel","to","routez","Grid","container","component","CssBaseline","xs","sm","md","image","elevation","square","Avatar","Typography","noValidate","onSubmit","Button","Link","href","onClick","backgroundImage","backgroundimage","backgroundRepeat","grey","backgroundSize","backgroundPosition","flexGrow","card","isLoading","setIsLoading","usrDetails","setUsrDetails","useEffect","UserDetails","finally","Card","CardHeader","title","subheader","CardContent","id","username","InputProps","readOnly","useremail","paper","padding","textAlign","text","layout","leftcontainer","rightcontainer","large","imagecard","Paper","alt","gutterBottom","List","ListItem","button","ListItemIcon","ListItemText","primary","maxWidth","media","PostCard","CardActionArea","CardMedia","image_url","ListItemAvatar","description","CardActions","size","marginRight","marginBottom","pagination","buttonalign","modal","modelpaper","background","border","boxShadow","shadows","progressBar","postData","MediaCard","React","page","setPage","open","setOpen","setQuillVal","progress","setProgress","buffer","setBuffer","setFile","progressRef","useRef","current","diff","Math","random","diff2","timer","setInterval","clearInterval","startIcon","Pagination","count","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","placeholder","multiline","LinearProgress","vvariant","valueBuffer","style","file","files","onTryAutoSignIn","getItem","routes","exact","path","SignIn","SignUp","UserProfile","FeedPage","Boolean","window","location","hostname","match","initialState","loading","authRedirectPath","action","reducer","alerts","alertState","removeAlert","fieldName","alertId","filter","index","composeEnhancers","compose","rootReducer","combineReducers","authReducer","alertReducer","store","createStore","applyMiddleware","thunk","app","StrictMode","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.aa783742.chunk.js","sourcesContent":["import axios from '../../axios-SE';\nimport * as actionTypes from './actionTypes';\nimport { authRequestTimeoutSec } from '../../shared/consts';\nimport { login, register } from \"../../api/auth\";\n\nlet authRequestInterceptor;\n\nconst authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nconst authSuccess = (token, email) => {\n    authRequestInterceptor = axios.interceptors.request.use(request => {\n        request.headers.Authorization = `Bearer ${token}`;\n        return request;\n    });\n\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        email: email,\n        idToken: token,\n    };\n};\n\nconst authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const authLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('email');\n    axios.interceptors.request.eject(authRequestInterceptor);\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nconst checkAuthTimeout = (expirationTime) => (dispatch) => {\n    setTimeout(() => {\n        dispatch(authLogout());\n    }, expirationTime * 1000)\n};\n\nexport const authReg = (gmail, name, gender,age, postalcode, address) => (dispatch) => {\n    dispatch(authStart());\n    let authData = {\n        email: gmail,\n        name: name,\n        gender: gender,\n        age: age,\n        postalcode: postalcode,\n        address: address,\n    }\n    console.log(authData)\n    register(authData)\n        .then((response) => {\n            console.log(response)\n            console.log(response.data)\n            if (response.data) {\n                const expirationDate = new Date(new Date().getTime() + authRequestTimeoutSec * 1000);\n                localStorage.setItem('email', response.data.UserEmail);\n                localStorage.setItem('token', response.data.Token.value);\n                localStorage.setItem('expirationDate', expirationDate);\n                dispatch(authSuccess(response.data.token, response.data.UserEmail));\n                dispatch(checkAuthTimeout(authRequestTimeoutSec));\n            } else {\n                dispatch(authFail('Invalid Entry'));\n            }\n            if (response.error){\n                dispatch(authFail('Invalid Entry'));\n            }\n        });\n}\n\nexport const auth = (email, password) => (dispatch) => {\n    dispatch(authStart());\n    let authData = {\n        email: email,\n        password: password,\n    }\n\n    login(authData)\n        .then((response) => {\n            if (response.data) {\n                console.log(response.data.UserEmail);\n                const expirationDate = new Date(new Date().getTime() + authRequestTimeoutSec * 1000);\n                localStorage.setItem('email', response.data.UserEmail);\n                localStorage.setItem('token', response.data.Token.value);\n                localStorage.setItem('expirationDate', expirationDate);\n                dispatch(authSuccess(response.data.Token.value, response.data.UserEmail));\n                dispatch(checkAuthTimeout(authRequestTimeoutSec));\n            } else {\n                dispatch(authFail('Invalid Username or Password'));\n            }\n            if (response.error){\n                dispatch(authFail('Invalid Username or Password'));\n            }\n        });\n}\n\nexport const authCheckState = () => (dispatch) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n        dispatch(authLogout());\n    } else {\n        const expirationDate = new Date(localStorage.getItem('expirationDate'));\n        if (expirationDate <= new Date()) {\n            dispatch(authLogout());\n        } else {\n            const email = localStorage.getItem('email');\n            dispatch(authSuccess(token, email));\n            dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n        }\n    }\n}\n","/**\n * Used in Input validation. If a new rule must be implemented, it should be added reflecting the pattern used currently.\n * @param {object} rules a JS object with rules as specified in 'shared/utility.js -> inputConfigObjectCreator'\n * @param {string} value a string to be checked for validity\n */\nexport const checkValidity = (rules, value) => {\n    let isValid = true;\n    if (!rules) {\n        return true;\n    }\n\n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid\n    }\n\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid\n    }\n\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    return isValid;\n}","export const INDEX = 'INDEX';\n\n/**\n * Used to update objects immutabaly \n * @param {object} object the original JS object\n * @param {object} updates updates to be made\n */\nexport const updateObject = (object, updates) => {\n    return {\n        ...object,\n        ...updates\n    };\n};\n\n/**\n * Used to update an array immutabaly \n * @param {array} array the original JS array\n * @param {object} item item to be added\n */\nexport const addItemToArray = (array, item) => {\n    let newArray = [...array];\n    newArray.push(item)\n    return newArray;\n}\n\n\nexport const addItemRemoveDuplicate = (idtype,array,newarr) =>{\n    let result = [];\n    newarr.forEach(item => {\n        let index = array.findIndex(entry => entry[idtype] === item[idtype] )\n        if(index<0){\n            result.push(item)\n        }\n    })\n    return result;\n}\n/**\n * Used to remve item from an array immutabaly \n * @param {array} array the original JS array\n * @param {string} fieldName name of the field to identify the object from\n * @param {value} value value of the field\n */\nexport const removeItemFromArray = (array, fieldName, value) => {\n    if (fieldName === INDEX) {\n        let arr = array.filter((item, index) => {\n            return index !== value;\n        });\n\n        return arr;\n    }\n    let newArr = array.filter((item) => {\n        return item[fieldName] !== value;\n    });\n\n    return newArr;\n}\n\n/**\n * Used to replace item from an array immutabaly \n * @param {array} array the original JS array\n * @param {string} fieldName name of the field to identify the object from\n * @param {value} value item to be assigned\n */\nexport const replaceItemInArray = (array, fieldName, newItem, index) => {\n    if (fieldName === INDEX) {\n        let newArray = [...array];\n        newArray[index] = newItem;\n        return newArray;\n    } else {\n        return array.map((item) => {\n            if (item[fieldName] === newItem[fieldName]) {\n                return newItem;\n            }\n            return item;\n        });\n    }\n}\n\n/**\n * Returns a promise which will resolve after a given number of milliseconds\n * @param {number} milliseconds the original JS array\n */\nexport const sleep = (milliseconds) => {\n    return new Promise(resolve => setTimeout(resolve, milliseconds));\n}\n\n/**\n * Returns a boolean given an object containing the validity status of each input\n * @param {object} inputIsValid a js object with validity info of a function\n */\nexport const formIsValid = (inputIsValid) => {\n    let isValid = true;\n    Object.values(inputIsValid).forEach((value) => {\n        isValid = isValid && value;\n    });\n\n    return isValid\n};\n\n/**\n * Returns a string with the first letter capitalized\n * @param {string} string a string\n */\nexport const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\n/**\n * This method can be used to extract a \n * nested value from an object given a string path\n * eg: \"client.name\"\n * @param {object} obj \n * @param {string} path \n */\nexport const getNestedValueByPath = (obj, path) => {\n    let pathArray = path.split('.');\n    let value = { ...obj };\n    for (let i = 0; i < pathArray.length; i++) {\n        value = value[pathArray[i]]\n        if (!value) {\n            break;\n        }\n    }\n    return value;\n}","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nconst FHTextField = (props) => {\n    return (\n        <TextField\n            fullWidth={props.fullWidth}\n            onChange={props.inputChangeHandler}\n            error={props.hasErr}\n            className={props.componentClass}\n            helperText={props.hasErr ? props.errStr : ''}\n            label={props.label}\n            type={props.type}\n            variant=\"outlined\"\n            autoComplete={props.autoComplete} />\n    );\n}\n\nexport default FHTextField;","import React from 'react';\nimport FHtxthelp from '../components/UI/FHtexthelp';\n\nexport const buildTextFields = (inputDefinitions, inputProperties, inputChangeHandler, inputIsValid) => {\n    return (\n        <React.Fragment>\n            {Object.keys(inputDefinitions).map(key => {\n                let def = inputDefinitions[key];\n                return (\n                    <FHtxthelp\n                        key={key}\n                        fullWidth={def && def.fullWidth}\n                        inputChangeHandler={inputChangeHandler ? event => inputChangeHandler(event, key) : null}\n                        value={inputProperties && inputProperties[key] && inputProperties[key].value}\n                        componentClass={inputProperties && inputProperties[key] && inputProperties[key].styleClass}\n                        errStr={def && def.validations && def.validations.validationErrStr}\n                        hasErr={!inputIsValid[key]}\n                        label={def && def.label}\n                        type={def && def.type}\n                        autoComplete={def && def.autoComplete} />\n                );\n            })}\n        </React.Fragment>\n    );\n}","// General Const\nexport const SEHost = 'http://0.0.0.0:8087';\n// http://0.0.0.0:8087/auth/register\n// Auth Const\nexport const authRedirectPath = '/';\nexport const authRequestTimeoutSec = 3600;\n\n// SellerOne Api Routes\nexport const loginRoute = '/';\nexport const usersAdminRoute = '/v1/admin/users'","import axios from 'axios';\nimport { SEHost } from './shared/consts';\n\nconst instance = axios.create({\n    baseURL: SEHost\n});\n\nexport default instance;  ","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const ADD_ALERT = 'ADD_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';","import axios from \"../axios-SE\";\n\n// Utility functions\nexport const getRequest = async (uri) => {\n\ttry {\n\t\tlet response = await axios.get(uri);\n\n\t\treturn {\n\t\t\tdata: response.data,\n\t\t\terror: null\n\t\t};\n\t} catch (error) {\n\t\treturn {\n\t\t\tdata: null,\n\t\t\terror: error\n\t\t};\n\t}\n};\n\nexport const postRequest = async (uri, data) => {\n\ttry {\n\t\tlet response = await axios.post(uri, data);\n\n\t\treturn {\n\t\t\tdata: response.data,\n\t\t\terror: null\n\t\t};\n\t} catch (error) {\n\t\treturn {\n\t\t\tdata: null,\n\t\t\terror: error\n\t\t};\n\t}\n};\n\nexport const deleteRequest = async (uri) => {\n\ttry {\n\t\tlet response = await axios.delete(uri);\n\n\t\treturn {\n\t\t\tdata: response.data,\n\t\t\terror: null\n\t\t};\n\t} catch (error) {\n\t\treturn {\n\t\t\tdata: null,\n\t\t\terror: error\n\t\t};\n\t}\n};\n\nexport const putRequest = async (uri, data) => {\n\ttry {\n\t\tlet response = await axios.put(uri, data);\n\n\t\treturn {\n\t\t\tdata: response.data,\n\t\t\terror: null\n\t\t};\n\t} catch (error) {\n\t\treturn {\n\t\t\tdata: null,\n\t\t\terror: error\n\t\t};\n\t}\n};\n","import { postRequest } from \"./utils\";\n\nconst BASE_URL = \"auth\";\n\nexport const register = (data) => postRequest(`${BASE_URL}/register`, data);\n\nexport const login = (data) => postRequest(`${BASE_URL}/login`, data);\n\nexport const getUserDetails = (data) => postRequest(`${BASE_URL}/get_user_info`, data);\n// export const resetPassword = (data) =>\n// \tpostRequest(`${BASE_URL}/reset-password`, data);","import * as actionTypes from './actionTypes';\n\nexport const addAlert = (alert) => {\n    return {\n        type: actionTypes.ADD_ALERT,\n        alert: alert\n    };\n};\n\nexport const removeAlert = (alertId) => {\n    return {\n        type: actionTypes.REMOVE_ALERT,\n        alertId: alertId\n    };\n};","export const SIGNIN = '/signin';\nexport const SIGNUP = '/signup';\nexport const USER_PROFILE = '/userprofile';\nexport const FEED = '/feedpage';","import React, { useState, useCallback }  from 'react';\nimport { Redirect } from \"react-router\";\nimport { connect } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\n\nimport Avatar from '@material-ui/core/Avatar';\nimport { Button, FormLabel } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { checkValidity } from '../../shared/validate';\nimport { updateObject } from '../../shared/utility';\nimport { buildTextFields } from '../../helpers/uiHelpers';\nimport { auth } from '../../store/actions/index';\nimport { addAlert } from '../../store/actions/index';\nimport * as routez from '../../shared/routes';\n\n\nconst inputDefinitions = {\n    gmail: {\n        label: 'Email*',\n        validations: {\n            required: true,\n            isEmail: true,\n            validationErrStr: 'Enter a valid email',\n        }\n    },\n    password: {\n        label: 'Password*',\n        type: 'password',\n        validations: {\n            required: true,\n            minLength: 2,\n            maxLength: 40,\n            validationErrStr: 'Use between 6 and 40 characters for your password',\n        }\n    }\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginLeft: '45%'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n        loginInput: {\n        width: '100%',\n        marginTop: '20px',\n        color: 'white'\n  },\n}));\n\nfunction SignIn(props) {\n    const classes = useStyles();\n    const { isAuthenticated, error} = props;\n    let history = useHistory();\n\n    const redirectUrl = \"\";\n\n    const [inputIsValid, setInputIsValid] = useState({\n        gmail: true,\n        password: true\n    });\n\n    const [authObj, setAuthObj] = useState({\n        gmail: '',\n        password: ''\n    });\n\n    const inputProperties = {\n        gmail: {\n            styleClass: classes.loginInput\n        },\n        password: {\n            styleClass: classes.loginInput\n        }\n    };\n\n    const checkInputValidity = useCallback((inputId, newValue) => {\n        let isValid = true;\n        let validationConst = inputDefinitions[inputId].validations;\n        isValid = checkValidity(validationConst, newValue ? newValue : authObj[inputId])\n\n        return isValid;\n    }, [authObj])\n\n    const inputChangeHandler = useCallback((event, inputId) => {\n        let validationConst = inputDefinitions[inputId].validations;\n        let isValid = checkValidity(validationConst, event.target.value);\n        setInputIsValid(updateObject(inputIsValid, { [inputId]: isValid }));\n        setAuthObj(updateObject(authObj, { [inputId]: event.target.value }))\n    }, [authObj, inputIsValid]);\n\n    let inputFields = buildTextFields(inputDefinitions, inputProperties, inputChangeHandler, inputIsValid);\n\n    const onSubmitHandler = useCallback((event) => {\n        event.preventDefault()\n\n        let localInputIsValid = { ...inputIsValid };\n        localInputIsValid['gmail'] = checkInputValidity('gmail');\n        localInputIsValid['password'] = checkInputValidity('password');\n        setInputIsValid(localInputIsValid);\n\n        if (localInputIsValid['gmail'] && localInputIsValid['password']) {\n            props.onAuth(\n                authObj.gmail,\n                authObj.password\n            );\n        }\n    }, [authObj, checkInputValidity, inputIsValid, props]);\n\n    let formErrorLabel = null;\n    if (error) {\n        formErrorLabel = (\n            <div>\n                <FormLabel error={true}>\n                    {(error)}\n                </FormLabel>\n            </div>\n        );\n    }\n\n    if (isAuthenticated) {\n\t\tif (redirectUrl === \"\") return <Redirect to={routez.USER_PROFILE} />;\n\t\treturn <Redirect to={redirectUrl} />;\n    }\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\n        <Grid item xs={12} sm={8} md={5} elevation={6} square>\n        <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n            Sign In\n        </Typography>\n        <form noValidate autoComplete=\"off\" className={classes.form} onSubmit={onSubmitHandler}>\n            {formErrorLabel}\n            {inputFields}\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n            >\n                Sign In\n            </Button>\n            <Grid container>\n            <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n                </Link>\n            </Grid>\n            <Grid item>\n                <Link onClick={ ()=> history.push(\"/signup\")} variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n                </Link>\n            </Grid>\n            </Grid>\n        </form>\n        </Grid>\n    </Grid>\n  );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthenticated: state.auth.token != null,\n        error: state.auth.error,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAuth: (gmail, password) => dispatch(auth(gmail, password)),\n        addAlert: (alert) => dispatch(addAlert(alert))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","export default __webpack_public_path__ + \"static/media/signuppage.407f8b7a.jpg\";","import React, { useState, useCallback}  from 'react';\nimport { Redirect } from \"react-router\";\nimport { connect } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\n\nimport Avatar from '@material-ui/core/Avatar';\nimport { Button, FormLabel } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { checkValidity } from '../../shared/validate';\nimport { updateObject } from '../../shared/utility';\nimport { buildTextFields } from '../../helpers/uiHelpers';\nimport { authReg } from '../../store/actions/index';\nimport { addAlert } from '../../store/actions/index';\nimport * as routez from '../../shared/routes';\n\nimport backgroundimage from '../../shared/images/signuppage.jpg';\n\n\nconst inputDefinitions = {\n    gmail: {\n        label: 'Email*',\n        validations: {\n            required: true,\n            isEmail: true,\n            validationErrStr: 'Enter a valid email',\n        }\n    },\n    name: {\n        label: 'Name',\n        type: 'String',\n        validations: {\n            required: true,\n            minLength: 2,\n            maxLength: 40,\n            validationErrStr: 'Use between 6 and 40 characters for your password',\n        }\n    },\n    gender: {\n      label: 'Gender',\n      type: 'String',\n      validations: {\n          required: true,\n          minLength: 2,\n          maxLength: 40,\n          validationErrStr: 'Use between 6 and 40 characters for your password',\n      }\n    },\n    postalcode: {\n      label: 'Postal Code',\n      type: 'String',\n      validations: {\n          required: true,\n          minLength: 2,\n          maxLength: 40,\n          validationErrStr: 'Use between 6 and 40 characters for your password',\n      }\n    },\n    age: {\n        label: 'Age',\n        type: 'String',\n        validations: {\n            required: true,\n            minLength: 2,\n            maxLength: 40,\n            validationErrStr: 'Use between 6 and 40 characters for your password',\n        }\n      },\n    address: {\n      label: 'Address',\n      type: 'String',\n      validations: {\n          required: true,\n          minLength: 2,\n          maxLength: 40,\n          validationErrStr: 'Use between 6 and 40 characters for your password',\n      }\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    image: {\n        backgroundImage: backgroundimage ,\n        backgroundRepeat: 'no-repeat',\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        height: '100%',\n        width: '100%'\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginLeft: '45%'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    loginInput: {\n        width: '100%',\n        marginTop: '20px',\n        color: 'white'\n    },\n}));\n\nfunction SignIn(props) {\n    const classes = useStyles();\n    const { isAuthenticated, error } = props;\n    let history = useHistory();\n\n    const redirectUrl = \"\";\n\n    const [inputIsValid, setInputIsValid] = useState({\n      gmail: true,\n      name: true,\n      gender: true,\n      age: true,\n      postalcode: true,\n      address: true,\n    });\n\n    const [authObj, setAuthObj] = useState({\n      gmail: '',\n      name: '',\n      gender: '',\n      age: '',\n      postalcode: '',\n      address: '',\n    });\n\n    const inputProperties = {\n      gmail: {\n          styleClass: classes.loginInput\n      },\n      name: {\n          styleClass: classes.loginInput\n      },\n      gender: {\n        styleClass: classes.loginInput\n      },\n      age: {\n        styleClass: classes.loginInput\n      },\n      postalcode: {\n          styleClass: classes.loginInput\n      },\n      address: {\n        styleClass: classes.loginInput\n      },\n    };\n\n    const checkInputValidity = useCallback((inputId, newValue) => {\n        let isValid = true;\n        let validationConst = inputDefinitions[inputId].validations;\n        isValid = checkValidity(validationConst, newValue ? newValue : authObj[inputId])\n\n        return isValid;\n    }, [authObj])\n\n    const inputChangeHandler = useCallback((event, inputId) => {\n        let validationConst = inputDefinitions[inputId].validations;\n        let isValid = checkValidity(validationConst, event.target.value);\n        setInputIsValid(updateObject(inputIsValid, { [inputId]: isValid }));\n        setAuthObj(updateObject(authObj, { [inputId]: event.target.value }))\n    }, [authObj, inputIsValid]);\n\n    let inputFields = buildTextFields(inputDefinitions, inputProperties, inputChangeHandler, inputIsValid);\n\n    const onSubmitHandler = useCallback((event) => {\n        event.preventDefault()\n\n        let localInputIsValid = { ...inputIsValid };\n        localInputIsValid['gmail'] = checkInputValidity('gmail');\n        localInputIsValid['name'] = checkInputValidity('name');\n        localInputIsValid['gender'] = checkInputValidity('gender');\n        localInputIsValid['age'] = checkInputValidity('age');\n        localInputIsValid['postalcode'] = checkInputValidity('postalcode');\n        localInputIsValid['address'] = checkInputValidity('address');\n        setInputIsValid(localInputIsValid);\n\n        if (localInputIsValid['gmail'] && localInputIsValid['name']) {\n            props.onAuth(\n                authObj.gmail,\n                authObj.name,\n                authObj.gender,\n                authObj.age,\n                authObj.postalcode,\n                authObj.address,\n            );\n        }\n    }, [authObj, checkInputValidity, inputIsValid, props]);\n\n    let formErrorLabel = null;\n    if (error) {\n        formErrorLabel = (\n            <div>\n                <FormLabel error={true}>\n                    {(error)}\n                </FormLabel>\n            </div>\n        );\n    }\n\n    if (isAuthenticated) {\n\t\tif (redirectUrl === \"\") return <Redirect to={routez.USER_PROFILE} />;\n\t\treturn <Redirect to={redirectUrl} />;\n    }\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\n        <Grid item xs={12} sm={8} md={5} elevation={6} square>\n            <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n                Sign Up\n            </Typography>\n            <form noValidate autoComplete=\"off\" className={classes.form} onSubmit={onSubmitHandler}>\n                {formErrorLabel}\n                {inputFields}\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                >\n                    Sign Up\n                </Button>\n                <Grid container>\n                    <Grid item xs>\n                    <Link href=\"#\" variant=\"body2\">\n                        Forgot password?\n                    </Link>\n                    </Grid>\n                    <Grid item>\n                    <Link onClick={ ()=> history.push(\"/signin\")} variant=\"body2\">\n                        {\"Have an account? Sign In\"}\n                    </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        </Grid>\n    </Grid>\n  );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthenticated: state.auth.token != null,\n        error: state.auth.error,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAuth: (gmail, name, gender, age, postalcode, address) => dispatch(authReg(gmail, name, gender, age, postalcode, address)),\n        addAlert: (alert) => dispatch(addAlert(alert))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport { addAlert } from '../../store/actions/index';\nimport { getUserDetails } from \"../../api/auth\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    card:{\n        width: '100%'\n    },\n}));\n\nconst UserProfile = props =>  {\n    const classes = useStyles();\n    const { email } = props;\n    const [isLoading, setIsLoading] = useState(true);\n    const [ usrDetails, setUsrDetails] =useState([]);\n\n    useEffect(() => {\n        if (isLoading ) {\n           getUserDetails({email:email})\n            .then((response) => {\n              if (!response.error) {\n                setUsrDetails(response.data.UserDetails)\n              }\n            })\n            .finally(() => setIsLoading(false));\n        }\n    }, [isLoading, email]);\n\n    return (\n        <div className={classes.root}>  \n            <Card className={classes.card}>\n                <CardHeader\n                    title=\"My profile\"\n                    subheader=\"GreenBay\"\n                />\n                <CardContent>\n                    <form noValidate autoComplete=\"off\">\n                        <Grid container spacing={3}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    id=\"Username\"\n                                    label=\"User Name\"\n                                    value={usrDetails.username}\n                                    fullWidth\n                                    InputProps={{\n                                        readOnly: true,\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    type=\"name\"\n                                    id=\"gender\"\n                                    label=\"Gender\"\n                                    fullWidth\n                                    value={usrDetails.gender}\n                                    InputProps={{\n                                        readOnly: true,\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    id=\"email\"\n                                    label=\"Email\"\n                                    type=\"name\"\n                                    fullWidth\n                                    value={usrDetails.useremail}\n                                    InputProps={{\n                                        readOnly: true,\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    id=\"age\"\n                                    label=\"Age\"\n                                    InputProps={{\n                                        readOnly: true,\n                                    }}\n                                    fullWidth\n                                    value={usrDetails.age}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        margin=\"address\"\n                                        id=\"Address\"\n                                        label=\"Adress\"\n                                        fullWidth\n                                        value={usrDetails.address}\n                                        InputProps={{\n                                            readOnly: true,\n                                        }}\n                                    />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    id=\"postalcode\"\n                                    label=\"Postal Code\"\n                                    fullWidth\n                                    value={usrDetails.postalcode}\n                                    InputProps={{\n                                        readOnly: true,\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                    </form>\n                </CardContent>\n            </Card>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      error: state.auth.error,\n      isAuthenticated: state.auth.token != null,\n      email: state.auth.email\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addAlert: (alert) => dispatch(addAlert(alert))\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory} from \"react-router\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\n\nimport { addAlert } from '../../store/actions/index';\nimport UserDetails from \"../UserProfile/UserDetails\"\nimport backgroundimage from '../../shared/images/signuppage.jpg';\nimport * as routez from '../../shared/routes';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  layout:{\n    height: \"100%\",\n    margin: \"10px\"\n  },\n  leftcontainer:{\n    // display: 'flex',\n    // flexDirection: 'column',\n    // alignItems: 'center',\n    // justifyContent: 'center',\n  },\n  rightcontainer:{\n    height: \"100%\"\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n    backgroundImage: backgroundimage ,\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n  },\n  imagecard:{\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  }\n}));\n\nfunction UserProfile(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const { isAuthenticated } = props;\n  console.log(props.email)\n  if (!isAuthenticated) {\n\t\thistory.push(routez.SIGNIN)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3} className={classes.layout}>\n        <Grid item xs={12} sm={4} className={classes.leftcontainer} >\n          <Paper className={classes.imagecard}>\n              <Avatar alt=\"Remy Sharp\" className={classes.large} />\n              <Typography variant=\"h5\" gutterBottom>\n                Isuru Ariyarathne\n              </Typography>\n              <Typography variant=\"h6\" gutterBottom>\n                isuru.18@cse.mrt.ac.lk\n              </Typography>\n          </Paper>\n          <Paper className={classes.paper}>\n              <List component=\"nav\" aria-label=\"main mailbox folders\">\n                <ListItem button>\n                  <ListItemIcon>\n                    <InboxIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"My Profile\" />\n                </ListItem>\n                <ListItem button>\n                  <ListItemIcon>\n                    <DraftsIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Change Passowrd\" />\n                </ListItem>\n              </List>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} sm={8} className={classes.rightcontainer}>\n            {isAuthenticated ? <UserDetails /> :<UserDetails />}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      isAuthenticated: state.auth.token != null,\n      error: state.auth.error,\n      email: state.auth.email\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      addAlert: (alert) => dispatch(addAlert(alert))\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageIcon from '@material-ui/icons/Image';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nexport default function PostCard(props) {\n    const classes = useStyles();\n    const {data} = props;\n    console.log(data)\n    return (\n        <Card className={classes.root}>\n        <CardActionArea>\n            <CardMedia\n                className={classes.media}\n                image= {data[0].image_url}\n                title=\"Contemplative Reptile\"\n            />\n             <List className={classes.root}>\n                <ListItem>\n                    <ListItemAvatar>\n                    <Avatar>\n                        <ImageIcon />\n                    </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Photos\" secondary=\"Jan 9, 2014\" />\n                </ListItem>\n             </List>\n            <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {data[0].title}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {data[0].description}\n            </Typography>\n            </CardContent>\n        </CardActionArea>\n        <CardActions>\n            <Button size=\"small\" color=\"secondary\">\n                Delete\n            </Button>\n        </CardActions>\n        </Card>\n    );\n}\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { LinearProgress, Grid } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Typography from '@material-ui/core/Typography';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport TextField from '@material-ui/core/TextField';\nimport ReactQuill from 'react-quill'; \nimport 'react-quill/dist/quill.snow.css';\n\nimport PostCard from '../../components/UI/PostCard';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        display: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\tflexDirection: 'row',\n        marginLeft: theme.spacing(8),\n        marginRight: theme.spacing(8),\n        marginBottom: theme.spacing(8),\n    },\n    container: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    pagination: {\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n        display: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\tflexDirection: 'column',\n    },\n    button: {\n        margin: theme.spacing(8),\n    },\n    buttonalign: {\n        alignItems: 'right',\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    modelpaper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n        width: 400,\n    },\n    progressBar: {\n        width: '100%',\n    },\n}));\nconst postData=[{\"title\":\"Deforestation pattern 1\", \"user\":\"IsuruAriyarathne1\", \"description\":\"description1\", \"posted_date\":\"July 2nd 2021\", \"image_url\":\"http://wallup.net/wp-content/uploads/2016/01/20264-nature-forest-trees-green.jpg\", \"user_profile\":\"https://pixabay.com/illustrations/icon-user-male-avatar-business-5359553/\"}]\n\nexport default function MediaCard() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(1);\n  const [open, setOpen] = React.useState(false);\n//   const [quillVal, setQuillVal] = React.useState(false); //for later usage\n  const [setQuillVal] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [buffer, setBuffer] = React.useState(10);\n//   const [file, setFile] = React.useState('');   //for later usage\n  const [setFile] = React.useState('');\n  const onSelectFileChanged = (event) => {\n  const file = event.target.files[0];\n    setFile(file);\n  };\n\n  const progressRef = React.useRef(() => {});\n  React.useEffect(() => {\n    progressRef.current = () => {\n      if (progress > 100) {\n        setProgress(0);\n        setBuffer(10);\n      } else {\n        const diff = Math.random() * 10;\n        const diff2 = Math.random() * 10;\n        setProgress(progress + diff);\n        setBuffer(progress + diff + diff2);\n      }\n    };\n  });\n\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      progressRef.current();\n    }, 500);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n\n  const onChange = (event) => {\n    setQuillVal(event.target.value)\n  }\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = (event, value) => {\n    setPage(value);\n  };\n\n  return (\n      <React.Fragment>\n        <div className={classes.root}>\n            <Grid container spacing={3} className={classes.container}>\n                <Grid container spacing={3} className={classes.buttonalign}>\n                    <Grid item xs>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            startIcon={<CloudUploadIcon />}\n                            onClick={handleOpen}\n                        >\n                            Upload New Post\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={3}>\n                    <Grid item xs>\n                        <PostCard data={postData}/>\n                    </Grid>\n                    <Grid item xs>\n                        <PostCard data={postData}/>\n                    </Grid>\n                    <Grid item xs>\n                        <PostCard data={postData}/>\n                    </Grid>\n                    <Grid item xs>\n                        <PostCard data={postData}/>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={3} className={classes.container}>\n                    <Grid item xs>\n                        <PostCard data={postData}/>\n                    </Grid>\n                    <Grid item xs>\n                        <PostCard data={postData}/>\n                    </Grid>\n                    <Grid item xs>\n                        <PostCard data={postData}/>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={3} className={classes.container}>\n                    <Grid item xs>\n                        <PostCard data={postData}/>\n                    </Grid>\n                    <Grid item xs>\n                        <PostCard data={postData}/>\n                    </Grid>\n                    <Grid item xs>\n                        <PostCard data={postData}/>\n                    </Grid>\n                    <Grid item xs>\n                        <PostCard data={postData}/>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n        <div className={classes.pagination}>\n            <Typography>Page: {page}</Typography>\n            <Pagination count={10} page={page} onChange={handleChange} />\n        </div>\n        <Modal\n            aria-labelledby=\"transition-modal-title\"\n            aria-describedby=\"transition-modal-description\"\n            className={classes.modal}\n            open={open}\n            onClose={handleClose}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n            timeout: 500,\n            }}\n        >\n            <Fade in={open}>\n            <div className={classes.modelpaper}>\n                <h2 id=\"transition-modal-title\">Add new post</h2>\n                <TextField\n                    id=\"outlined-textarea\"\n                    label=\"Title\"\n                    placeholder=\"Enter the post title\"\n                    multiline\n                    fullWidth\n                    variant=\"outlined\"\n                />\n                <div className={classes.progressBar}>\n                    <LinearProgress vvariant=\"buffer\" value={progress} valueBuffer={buffer}/>\n                </div>\n                <input\n                    style={{\n                        margin: '0px 10px 10px 0px',\n                        backgroundColor: '#c7ece3',\n                    }}\n                    type=\"file\"\n                    onChange={onSelectFileChanged}\n                />\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    // onClick={}\n                    // disabled={file === ''}\n                >\n                    Upload\n                </Button>\n                <ReactQuill onChange={onChange} />\n            </div>\n            </Fade>\n        </Modal>\n      </React.Fragment>\n  );\n}\n","import React, { Suspense, useEffect }  from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\n\nimport SignIn from '../src/containers/Auth/SignIn';\nimport SignUp from '../src/containers/Auth/SignUp';\nimport UserProfile from '../src/containers/UserProfile/UserProfile';\nimport FeedPage from '../src/containers/Feed/PostCard';\n\nimport * as routez from './shared/routes';\nimport * as actions from \"./store/actions/index\";\n\nimport './App.css';\n\nfunction App(props) {\n\n  const onTryAutoSignIn = props.onTryAutoSignIn;\n\n  useEffect(() => {\n    onTryAutoSignIn();\n  }, [onTryAutoSignIn]);\n\n  let routes = (\n    <Suspense >\n      <Switch>\n        <Route exact path={routez.SIGNIN} component={SignIn}/>\n        <Route exact path={routez.SIGNUP} component={SignUp}/>\n        <Route exact path={routez.USER_PROFILE} component={UserProfile}/>\n        <Route exact path={routez.FEED} component={FeedPage}/>\n        <Redirect path=\"/\" to={routez.SIGNIN} />\n      </Switch>\n    </Suspense>\n  );\n\n\n  return (\n    <div className=\"App\">\n      {routes}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    email: state.auth.email\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTryAutoSignIn: () => dispatch(actions.authCheckState()),\n  };\n};\n\n// const withErrorhandlerWrappedComponent = withErrorHandler(App, axios);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nimport { authRedirectPath } from '../../shared/consts';\n\nconst initialState = {\n    token: null,\n    email: null,\n    error: null,\n    loading: false,\n    authRedirectPath: authRedirectPath\n};\n\nconst authStart = (state) => {\n    return updateObject(\n        state,\n        {\n            error: null,\n            loading: true\n        }\n    );\n};\n\nconst authSuccess = (state, action) => {\n    return updateObject(\n        state,\n        {\n            token: action.idToken,\n            email: action.email,\n            error: null,\n            loading: false\n        }\n    );\n};\n\nconst authFail = (state, action) => {\n    return updateObject(\n        state,\n        {\n            token: null,\n            email: null,\n            error: action.error,\n            loading: false\n        }\n    );\n};\n\nconst authLogout = (state) => {\n    return updateObject(\n        state,\n        {\n            token: null,\n            email: null,\n        }\n    );\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authStart(state);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state);\n        default: return state;\n    };\n};\n\nexport default reducer;","import { addItemToArray, removeItemFromArray, updateObject, INDEX } from '../../shared/utility'\nimport * as actionTypes from '../actions/actionTypes'\n\nconst initialState = {\n    alerts: []\n};\n\nconst addAlert = (state, action) => {\n    let alertState = {\n        alerts: addItemToArray(\n            state.alerts,\n            action.alert\n        )\n    }\n\n    return updateObject(\n        state,\n        alertState\n    );\n};\n\nconst removeAlert = (state, action) => {\n    let alertState = {\n        alerts: removeItemFromArray(\n            state.alerts,\n            INDEX,\n            action.alertId\n        )\n    }\n\n    return updateObject(\n        state,\n        alertState\n    );\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_ALERT: return addAlert(state, action);\n        case actionTypes.REMOVE_ALERT: return removeAlert(state, action);\n        default: return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport authReducer from './store/reducers/auth';\nimport alertReducer from './store/reducers/alert';\n\nconst composeEnhancers = (process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose;\n\nconst rootReducer = combineReducers(\n  {\n    auth: authReducer,\n    alert: alertReducer\n  }\n);\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}